/*一个快指针（next两步）一个慢指针（next一步），如果环了肯定会相遇*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
bool hasCycle(struct ListNode *head) {
    if(NULL == head)
        return false;

    struct ListNode *fast = head;
    struct ListNode *slow = head;

    while(slow && fast && fast->next){
        slow = slow->next;
        fast = fast->next->next;//不用担心越界，while条件里保证了可以访问到两个next
        if(slow == fast)
            return true;
    }

    return false;
}
