/*你总共有 n 枚硬币，你需要将它们摆成一个阶梯形状，第 k 行就必须正好有 k 枚硬币。
给定一个数字 n，找出可形成完整阶梯行的总行数。
n 是一个非负整数，并且在32位有符号整型的范围内。
示例 1:
n = 5
硬币可排列成以下几行:
¤
¤ ¤
¤ ¤
因为第三行不完整，所以返回2.*/

/*对于任意的n,对应的答案res满足res<=sqrt(n)，让i从sqrt(n)+1开始往上遍历，直至找到i*(i+1)/2 > n的数，并且返回i-1*/
int arrangeCoins(int n){
    int i = sqrt(n) + 1;
    double sum;
    while(i) {
        sum = (double)i*(i+1)/2 - n;
        if(sum > 0)
            return i-1;
        i++; 
    }
    return 0;
}
