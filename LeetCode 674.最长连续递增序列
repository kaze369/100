/*给定一个未经排序的整数数组，找到最长且连续的的递增序列，并返回该序列的长度。
示例 1:
  输入: [1,3,5,4,7]
  输出: 3
  解释: 最长连续递增序列是 [1,3,5], 长度为3。
  尽管 [1,3,5,7] 也是升序的子序列, 但它不是连续的，因为5和7在原数组里被4隔开。 
示例 2:
  输入: [2,2,2,2,2]
  输出: 1
  解释: 最长连续递增序列是 [2], 长度为1。
注意：数组长度不会超过10000。*/
 
 /*判断是否和后续元素发生逆序,注意是顺序的特殊情况以及长度为0和1的时候的情况*/

int findLengthOfLCIS(int* nums, int numsSize){
    int max=0,count=1,i;
    if(numsSize==0)
    return 0;
    for(i=0;i<numsSize-1;i++)
    {
        if(nums[i]<nums[i+1])/
                count++;
        else//逆序的情况
        {
            if(count>max)
                max=count;
            count=1;
        }
    }
    if(count>max)  //防止全部顺序，不出现逆序的情况
        max=count;
    return max;
}
