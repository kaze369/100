/*魔术索引。 在数组A[0...n-1]中，有所谓的魔术索引，满足条件A[i] = i。给定一个有序整数数组，编写一种方法找出魔术索引，若有的话，在数组A中找出一个魔术索引，如果没有，则返回-1。若有多个魔术索引，返回索引值最小的一个。
示例1:
 输入：nums = [0, 2, 3, 4, 5]
 输出：0
 说明: 0下标的元素为0*/
 
 int findMagicIndex(int* nums, int numsSize){
    if (NULL == nums){
        return -1;
    }
    for (int i = 0; i < numsSize; ){     //从低到高依次遍历
        if (nums[i] == i){         //第一次满足的 i 就是最小的
            return i;
        }
        else if (nums[i] > i)     //nums[i] > i ,且 i 上升 => nums[i] 也上升
            i = nums[i];          // [ i, nums[i] )之间不可能出现满足题意的数字
        else            //nums[i] < i
            ++i;
    }
    return -1;//找不到返回失败
}
 
