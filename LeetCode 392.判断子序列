/*给定字符串 s 和 t ，判断 s 是否为 t 的子序列。
你可以认为 s 和 t 中仅包含英文小写字母。字符串 t 可能会很长（长度 ~= 500,000），而 s 是个短字符串（长度 <=100）。
字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，"ace"是"abcde"的一个子序列，而"aec"不是）。
示例 1:
s = "abc", t = "ahbgdc"*/

/*/循环t的每一个字符去和s的字符匹配，如果成功，记录此字符在t的坐标t_pos,在s中的坐标j之后，再让t的字符和s的字符匹配。
如果所有s的字符都能匹配成功，返回true。否则，让t遍历的坐标i=t_pos+1，让s已经匹配上的坐标j=0。再从头开始执行以上操作，直至函数结束。*/
bool isSubsequence(char * s, char * t){
    int s_size=strlen(s);
    if(s_size==0)return true;
    int t_size=strlen(t);
    int t_pos=0; 
    int flag=0;
    for(int i=0,j=0;i<t_size;i++)
    {
        if(!flag&&s[j]==t[i])
        {
            flag=1;
            t_pos=i+1;
            while(i<t_size&&j<s_size)
            {
                if(s[j]==t[i])
                {
                    i++;
                    j++;
                }
                else
                    i++;
            }
            if(j>=s_size)
                return true;
            else
            {
                j=0;
                i=t_pos;
                flag=0;
            }
        }
    }
    return false;
}
