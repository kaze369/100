/*给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。
函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。
说明:
返回的下标值（index1 和 index2）不是从零开始的。
你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。
示例:
输入: numbers = [2, 7, 11, 15], target = 9
输出: [1,2]
解释: 2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。*/

int* twoSum(int* numbers, int numbersSize, int target, int* returnSize){
    int i, l, r, m, flg = 0;
   
    for (i = 0; i < numbersSize - 1; i++){ 
        l = i + 1, r = numbersSize - 1;
        while (l <= r){
            m = (l + r) / 2;
            if (numbers[m] > target - numbers[i])
                r = m - 1;
            else if (numbers[m] < target - numbers[i])
                l = m + 1;
            else{
                flg = 1;
                break;
            }
        }
        if (flg)
            break;
    }
    *returnSize = 2;
    int *res = (int*)malloc(sizeof(int) * 2);
    res[0] = i + 1;
    res[1] = m + 1;
    return res;
}
