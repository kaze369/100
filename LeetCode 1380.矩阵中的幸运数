/*给你一个 m * n 的矩阵，矩阵中的数字 各不相同 。请你按 任意 顺序返回矩阵中的所有幸运数。
幸运数是指矩阵中满足同时下列两个条件的元素：
在同一行的所有元素中最小
在同一列的所有元素中最大
示例 1：
输入：matrix = [[3,7,8],[9,11,13],[15,16,17]]
输出：[15]
解释：15 是唯一的幸运数，因为它是其所在行中的最小值，也是所在列中的最大值。*/

int* luckyNumbers (int** matrix, int matrixSize, int* matrixColSize, int* returnSize){
    int i, j;
    int *ret = (int*)malloc(sizeof(int) * matrixSize);
    int minRow[matrixSize], maxCol[*matrixColSize];
    for (i = 0; i < matrixSize; i++) {
        minRow[i] = INT_MAX;
        for (j = 0; j < *matrixColSize; j++) {
            if (matrix[i][j] <= minRow[i]) {
                minRow[i] = matrix[i][j];
            }
        }
    }
    for (i = 0; i < *matrixColSize; i++) {
        maxCol[i] = INT_MIN;
        for (j = 0; j < matrixSize; j++) {
            if (matrix[j][i] >= maxCol[i]) {
                maxCol[i] = matrix[j][i];
            }
        }
    }
    *returnSize = 0;
    for (i = 0; i < matrixSize; i++) {
        for (j = 0; j < *matrixColSize; j++) {
            if (matrix[i][j] == minRow[i] && matrix[i][j] == maxCol[j]) {
                ret[*returnSize] = matrix[i][j];
                (*returnSize)++;
            }
        }
    }
    return ret;
}
