/*冬季已经来临。 你的任务是设计一个有固定加热半径的供暖器向所有房屋供暖。
现在，给出位于一条水平线上的房屋和供暖器的位置，找到可以覆盖所有房屋的最小加热半径。
所以，你的输入将会是房屋和供暖器的位置。你将输出供暖器的最小加热半径。
说明:
给出的房屋和供暖器的数目是非负数且不会超过 25000。
给出的房屋和供暖器的位置均是非负数且不会超过10^9。
只要房屋位于供暖器的半径内(包括在边缘上)，它就可以得到供暖。
所有供暖器都遵循你的半径标准，加热的半径也一样。*/

/*先按递增排序，若找到近的就存起来，没有就继续找，最后在其中找最大的*/
int com(const void* a,const void* b)
{
    return *(int*)a>*(int*)b ? 1:-1;
}
int findRadius(int* houses, int housesSize, int* heaters, int heatersSize){
    qsort(houses,housesSize,sizeof(int),com);
    qsort(heaters,heatersSize,sizeof(int),com);
    int i=0,j=0,counted=0,sumed=0,aaa[housesSize];
    for(i=0;i<housesSize;i++)
    {
        counted=abs(heaters[0]-houses[i]);
        for(j;j<heatersSize;j++)
        {
            if(counted<abs(houses[i]-heaters[j]))
            {
                break;
            }
            else
            {
                counted=abs(heaters[j]-houses[i]);
            }

        }
        aaa[i]=counted;
        j--;
        
    }
    qsort(aaa,housesSize,sizeof(int),com);

    return aaa[housesSize-1];
}
